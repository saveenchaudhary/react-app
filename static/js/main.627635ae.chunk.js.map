{"version":3,"sources":["Components/Alert.js","Components/InputForm.js","Components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["firstWordCapitalize","word","toUpperCase","slice","Alert","props","alert","className","typ","role","msg","InputForm","useState","text","setText","btnText","setBtnText","console","log","mode","style","backgroundColor","color","transition","htmlFor","heading","id","rows","value","onChange","e","target","placeholder","background","onClick","newText","toLowerCase","showAlert","opacity","split","length","Navbar","href","title","type","redTheme","boxShadow","greenTheme","violetTheme","orangeTheme","toggleMode","defaultProps","aboutText","App","setMode","setAlert","setColor","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.627635ae.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n// Capitalise first word of type\r\nfunction firstWordCapitalize(word){\r\n    let firstCharcter = word[0].toUpperCase();\r\n    return firstCharcter + word.slice(1);\r\n    \r\n}\r\nfirstWordCapitalize('saveen');\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.typ}`} role=\"alert\">\r\n     {firstWordCapitalize(props.alert.typ)} - {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\r\nimport \"./css/style.css\";\r\n\r\nexport default function InputForm(props) {\r\n  // State Variable\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [btnText, setBtnText] = useState(\"Upper\");\r\n\r\n  console.log(props.mode);\r\n  // Functions\r\n  const handleUpClick = () => {\r\n    let newText;\r\n    if (btnText === \"Lower\") {\r\n      newText = text.toLowerCase();\r\n      props.showAlert(\"Converting into Lower Case\", \"primary\");\r\n      setBtnText(\"Upper\");\r\n    } else {\r\n      newText = text.toUpperCase();\r\n      props.showAlert(\"Converting into Upper Case\", \"success\");\r\n      setBtnText(\"Lower\");\r\n    }\r\n    // console.log('The value of text is :'+newText);\r\n    setText(newText);\r\n  };\r\n  const handleOnChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        backgroundColor: props.mode === \"dark\" ? \"#49535d\" : \"\",\r\n        color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        transition: \"1s\",\r\n      }}\r\n    >\r\n      <div className=\" my-3\">\r\n        <h3 htmlFor=\"\">{props.heading}</h3>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"textArea\"\r\n          rows=\"3\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#49535d\" : \"\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            transition: \"1s\",\r\n          }}\r\n          // Here above we write javascript inside the javascript object\r\n          placeholder=\"Enter Text\"\r\n        ></textarea>\r\n      </div>\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        style={{ background: props.color, transition: \"1s\" }}\r\n        onClick={handleUpClick}\r\n      >\r\n        Convert To {btnText} Case\r\n      </button>\r\n      <div\r\n        className=\"card my-3\"\r\n        style={{\r\n          transition: \"1s\",\r\n          background: props.color,\r\n          opacity: 0.8,\r\n          color: props.mode === 'light'? 'black':'white'\r\n        }}\r\n      >\r\n        <div className=\"card-body\">\r\n          Words :{\" \"}\r\n          {text.split(\" \").length === 1 ? 0 : text.split(\" \").length - 1}\r\n        </div>\r\n        <div className=\"card-body\">Character : {text.length}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">\r\n        {props.title}\r\n      </Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        {props.title}\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n            {/* <Link className=\"nav-link\" to=\"/\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </Link> */}\r\n            <a className=\"nav-link\" href=\"#\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">\r\n              {props.aboutText}\r\n            </Link> */}\r\n          </li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          {/* Custom Color Scheme */}\r\n          <div className=\"colorSchemeContainer\">\r\n            <div\r\n              onClick={props.redTheme}\r\n              style={{ background: props.color === \"red\" ? \"white\" : \"red\" ,\r\n              boxShadow: \"red 0px 0px 6px 1px\"\r\n            }}\r\n              className=\"colorCircle\"\r\n              id=\"red\"\r\n            ></div>\r\n            <div\r\n              onClick={props.greenTheme}\r\n              style={{\r\n                background: props.color === \"green\" ? \"white\" : \"green\",\r\n                boxShadow: \"green 0px 0px 6px 1px\"\r\n              }}\r\n              className=\"colorCircle\"\r\n              id=\"green\"\r\n            ></div>\r\n            <div\r\n              onClick={props.violetTheme}\r\n              className=\"colorCircle\"\r\n              style={{\r\n                background: props.color === \"violet\" ? \"white\" : \"violet\",\r\n                boxShadow: \"violet 0px 0px 6px 1px\"\r\n                \r\n              }}\r\n              id=\"orange\"\r\n            ></div>\r\n            <div\r\n              onClick={props.orangeTheme}\r\n              className=\"colorCircle\"\r\n              style={{\r\n                background: props.color === \"orange\" ? \"white\" : \"orange\",\r\n                boxShadow: \"orange 0px 0px 6px 1px\"\r\n\r\n              }}\r\n              id=\"violet\"\r\n            ></div>\r\n          </div>\r\n          <div\r\n            className={`custom-control custom-switch my-3 text-${\r\n              props.mode === \"dark\" ? \"light\" : \"dark\"\r\n            }`}\r\n          >\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id=\"customSwitch1\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">\r\n              Mode\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Lovely Kamboj\",\r\n  aboutText: \"This is about Text\",\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./Components/About\";\nimport Alert from \"./Components/Alert\";\nimport InputForm from \"./Components/InputForm\";\nimport Navbar from \"./Components/Navbar\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const [color, setColor] = useState(null);\n\n  function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      typ: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  function toggleMode() {\n    document.body.style.transition = \"1s\";\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"#49535d\";\n      showAlert(\"Changing to Dark Mode\", \"success\");\n    } else {\n      document.body.style.background = \"white\";\n      setMode(\"light\");\n      showAlert(\"Changing to Light Mode\", \"success\");\n    }\n  }\n\n  function redTheme() {\n    if (color !== \"red\") {\n      setColor(\"red\");\n      document.body.style.background =\n        mode === \"dark\" ? \"#49535d \" : \"#ff000052\";\n    } else {\n      setColor(\"\");\n      document.body.style.background = mode === \"dark\" ? \"#49535d\" : \"white\";\n    }\n  }\n  function greenTheme() {\n    if (color !== \"green\") {\n      setColor(\"green\");\n      document.body.style.background =\n        mode === \"dark\" ? \"#49535d \" : \"#0080005e\";\n    } else {\n      setColor(\"\");\n      document.body.style.background = mode === \"dark\" ? \"#49535d\" : \"white\";\n    }\n  }\n  function violetTheme() {\n    if (color !== \"violet\") {\n      setColor(\"violet\");\n      document.body.style.background =\n        mode === \"dark\" ? \"#49535d \" : \"#ee82ee52\";\n    } else {\n      setColor(\"\");\n      document.body.style.background = mode === \"dark\" ? \"#49535d\" : \"white\";\n    }\n  }\n  function orangeTheme() {\n    if (color !== \"orange\") {\n      setColor(\"orange\");\n      document.body.style.background =\n        mode === \"dark\" ? \"#49535d \" : \"#ffa50059\";\n    } else {\n      setColor(\"\");\n      document.body.style.background = mode === \"dark\" ? \"#49535d\" : \"white\";\n    }\n  }\n\n  return (\n    <>\n      {/* <Router>\n        <Navbar\n          title=\"Text Utill's\"\n          mode={mode}\n          aboutText=\"AboutAAA\"\n          toggleMode={toggleMode}\n          redTheme={redTheme}\n          greenTheme={greenTheme}\n          orangeTheme={orangeTheme}\n          violetTheme={violetTheme}\n          color={color}\n        />\n        <Alert alert={alert} />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <InputForm\n              heading=\"Enter the Text to Analyze\"\n              mode={mode}\n              showAlert={showAlert}\n              color={color}\n            />\n          </Route>\n          <Route exact path=\"/about\">\n            <About mode={mode} color={color} />\n          </Route>\n        </Switch>\n      </Router> */}\n\n      <Navbar\n        title=\"Text Utill's\"\n        mode={mode}\n        aboutText=\"AboutAAA\"\n        toggleMode={toggleMode}\n        redTheme={redTheme}\n        greenTheme={greenTheme}\n        orangeTheme={orangeTheme}\n        violetTheme={violetTheme}\n        color={color}\n      />\n      <Alert alert={alert} />\n      <InputForm\n        heading=\"Enter the Text to Analyze\"\n        mode={mode}\n        showAlert={showAlert}\n        color={color}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}